@model Calcs.Models.CalculateViewModel

@{
    ViewData["Title"] = "Simple Calculator";
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Index" method="post" >
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ValueA" class="control-label"></label>
                <input asp-for="ValueA" class="form-control" />
                <span asp-validation-for="ValueA" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ValueB" class="control-label"></label>
                <input asp-for="ValueB" class="form-control" />
                <span asp-validation-for="ValueB" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Operator" class="control-label"></label>
                <input asp-for="Operator" class="form-control" />
                <span asp-validation-for="Operator" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="calcular" class="btn btn-primary" />
            </div>
        </form>

    </div>
        <td>@Html.DisplayNameFor(model => model.Result)</td>
        <td>@Html.DisplayTextFor(model => model.Result)</td>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
